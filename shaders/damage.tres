[gd_resource type="VisualShader" load_steps=18 format=3 uid="uid://hog7djv15huq"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ixrat"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_pl7mc"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_u3sko"]
constant = Color(1, 0.51, 0.3, 0.929412)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_mx1fu"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_01yqf"]
function = 0

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_l5708"]
parameter_name = "Noise"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ao2j6"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_in8t3"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_r4i4v"]
default_input_values = [0, 0.0, 1, 8.0]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_5o7wd"]
constant = Color(0.74, 0.27898, 0.0814, 0.929412)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_fs3sl"]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hg2gb"]
input_name = "texture"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_y7oiu"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ph3cy"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_kfbgt"]
constant = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_4o6f7"]
parameter_name = "dissolve"
hint = 1
min = 0.7

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_wa2gt"]
expanded_output_ports = [0]
source = 5

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Noise;
uniform float dissolve : hint_range(0.69999998807907, 1);



void fragment() {
// ColorConstant:23
	vec4 n_out23p0 = vec4(0.740000, 0.278980, 0.081400, 0.929412);


// ColorConstant:17
	vec4 n_out17p0 = vec4(1.000000, 0.510000, 0.300000, 0.929412);


// Input:21
	float n_out21p0 = TIME;


// FloatOp:22
	float n_in22p1 = 8.00000;
	float n_out22p0 = n_out21p0 * n_in22p1;


// FloatFunc:19
	float n_out19p0 = sin(n_out22p0);


// Mix:20
	vec4 n_out20p0 = mix(n_out23p0, n_out17p0, vec4(n_out19p0));


	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(TEXTURE, UV);
	float n_out9p4 = n_out9p0.a;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Noise, UV);


// FloatParameter:8
	float n_out8p0 = dissolve;


// FloatConstant:6
	float n_out6p0 = 0.000000;


// FloatConstant:7
	float n_out7p0 = 1.000000;


	vec3 n_out5p0;
// If:5
	float n_in5p2 = 0.00001;
	vec3 n_in5p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out3p0.x - n_out8p0) < n_in5p2)
	{
		n_out5p0 = n_in5p3;
	}
	else if(n_out3p0.x < n_out8p0)
	{
		n_out5p0 = vec3(n_out7p0);
	}
	else
	{
		n_out5p0 = vec3(n_out6p0);
	}


// Mix:10
	float n_in10p0 = 0.00000;
	float n_out10p0 = mix(n_in10p0, n_out5p0.x, n_out9p4);


// Mix:18
	vec4 n_out18p0 = mix(n_out20p0, n_out9p0, vec4(n_out10p0));


// Mix:16
	float n_in16p2 = 0.50000;
	float n_out16p0 = mix(n_out9p4, n_out10p0, n_in16p2);


// Output:0
	COLOR.rgb = vec3(n_out18p0.xyz);
	COLOR.a = n_out16p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(920, 180)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_l5708")
nodes/fragment/2/position = Vector2(-1640, -320)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_fs3sl")
nodes/fragment/3/position = Vector2(-1200, -200)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_hg2gb")
nodes/fragment/4/position = Vector2(-1020, 620)
nodes/fragment/5/node = SubResource("VisualShaderNodeIf_y7oiu")
nodes/fragment/5/position = Vector2(-940, 120)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatConstant_ph3cy")
nodes/fragment/6/position = Vector2(-1320, 240)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_kfbgt")
nodes/fragment/7/position = Vector2(-1320, 320)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatParameter_4o6f7")
nodes/fragment/8/position = Vector2(-2320, 0)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_wa2gt")
nodes/fragment/9/position = Vector2(-580, 500)
nodes/fragment/10/node = SubResource("VisualShaderNodeMix_ixrat")
nodes/fragment/10/position = Vector2(-240, 280)
nodes/fragment/16/node = SubResource("VisualShaderNodeMix_pl7mc")
nodes/fragment/16/position = Vector2(420, 320)
nodes/fragment/17/node = SubResource("VisualShaderNodeColorConstant_u3sko")
nodes/fragment/17/position = Vector2(-100, -220)
nodes/fragment/18/node = SubResource("VisualShaderNodeMix_mx1fu")
nodes/fragment/18/position = Vector2(420, 100)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatFunc_01yqf")
nodes/fragment/19/position = Vector2(-100, -120)
nodes/fragment/20/node = SubResource("VisualShaderNodeMix_ao2j6")
nodes/fragment/20/position = Vector2(160, -200)
nodes/fragment/21/node = SubResource("VisualShaderNodeInput_in8t3")
nodes/fragment/21/position = Vector2(-620, -120)
nodes/fragment/22/node = SubResource("VisualShaderNodeFloatOp_r4i4v")
nodes/fragment/22/position = Vector2(-320, -160)
nodes/fragment/23/node = SubResource("VisualShaderNodeColorConstant_5o7wd")
nodes/fragment/23/position = Vector2(-100, -300)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 5, 0, 6, 0, 5, 4, 7, 0, 5, 5, 8, 0, 5, 1, 4, 0, 9, 2, 18, 0, 0, 0, 16, 0, 0, 1, 10, 0, 16, 1, 9, 4, 16, 0, 9, 0, 18, 1, 10, 0, 18, 2, 5, 0, 10, 1, 9, 4, 10, 2, 20, 0, 18, 0, 19, 0, 20, 2, 21, 0, 22, 0, 22, 0, 19, 0, 17, 0, 20, 1, 23, 0, 20, 0)
